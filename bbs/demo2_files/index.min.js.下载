var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function(a) {
    var b = 0;
    return function() {
        return b < a.length ? {
            done: !1,
            value: a[b++]
        } : {
            done: !0
        }
    }
}
;
$jscomp.arrayIterator = function(a) {
    return {
        next: $jscomp.arrayIteratorImpl(a)
    }
}
;
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.ISOLATE_POLYFILLS = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {
    if (a == Array.prototype || a == Object.prototype)
        return a;
    a[b] = c.value;
    return a
}
;
$jscomp.getGlobal = function(a) {
    a = ["object" == typeof globalThis && globalThis, a, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
    for (var b = 0; b < a.length; ++b) {
        var c = a[b];
        if (c && c.Math == Math)
            return c
    }
    throw Error("Cannot find global object");
}
;
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
    $jscomp.initSymbol = function() {}
    ;
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
}
;
$jscomp.SymbolClass = function(a, b) {
    this.$jscomp$symbol$id_ = a;
    $jscomp.defineProperty(this, "description", {
        configurable: !0,
        writable: !0,
        value: b
    })
}
;
$jscomp.SymbolClass.prototype.toString = function() {
    return this.$jscomp$symbol$id_
}
;
$jscomp.Symbol = function() {
    function a(c) {
        if (this instanceof a)
            throw new TypeError("Symbol is not a constructor");
        return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX + (c || "") + "_" + b++,c)
    }
    var b = 0;
    return a
}();
$jscomp.initSymbolIterator = function() {
    $jscomp.initSymbol();
    var a = $jscomp.global.Symbol.iterator;
    a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("Symbol.iterator"));
    "function" != typeof Array.prototype[a] && $jscomp.defineProperty(Array.prototype, a, {
        configurable: !0,
        writable: !0,
        value: function() {
            return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
        }
    });
    $jscomp.initSymbolIterator = function() {}
}
;
$jscomp.initSymbolAsyncIterator = function() {
    $jscomp.initSymbol();
    var a = $jscomp.global.Symbol.asyncIterator;
    a || (a = $jscomp.global.Symbol.asyncIterator = $jscomp.global.Symbol("Symbol.asyncIterator"));
    $jscomp.initSymbolAsyncIterator = function() {}
}
;
$jscomp.iteratorPrototype = function(a) {
    $jscomp.initSymbolIterator();
    a = {
        next: a
    };
    a[$jscomp.global.Symbol.iterator] = function() {
        return this
    }
    ;
    return a
}
;
(function(a) {
        function b(g) {
            if (c[g])
                return c[g].exports;
            var f = c[g] = {
                i: g,
                l: !1,
                exports: {}
            };
            a[g].call(f.exports, f, f.exports, b);
            f.l = !0;
            return f.exports
        }
        var c = {};
        b.m = a;
        b.c = c;
        b.d = function(a, f, e) {
            b.o(a, f) || Object.defineProperty(a, f, {
                configurable: !1,
                enumerable: !0,
                get: e
            })
        }
        ;
        b.n = function(a) {
            var f = a && a.__esModule ? function() {
                    return a["default"]
                }
                : function() {
                    return a
                }
            ;
            b.d(f, "a", f);
            return f
        }
        ;
        b.o = function(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b)
        }
        ;
        b.p = "";
        return b(b.s = 0)
    }
)([function(a, b, c) {
    Object.defineProperty(b, "__esModule", {
        value: !0
    });
    a = c(1);
    $jscomp.initSymbol();
    $jscomp.initSymbol();
    $jscomp.initSymbolIterator();
    b = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a) {
            return typeof a
        }
        : function(a) {
            $jscomp.initSymbol();
            $jscomp.initSymbol();
            $jscomp.initSymbol();
            return a && "function" === typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    ;
    "object" !== b(window.themehouse) && (window.themehouse = {});
    "object" !== b(window.themehouse.settings) && (window.themehouse.settings = {});
    "object" !== b(window.themehouse.settings.data) && (window.themehouse.settings.data = {});
    window.themehouse.settings.data.jsVersion = "2.1.8.0_Release";
    (new a.a({
        settings: window.themehouse.settings.sticky
    })).register()
}
    , function(a, b, c) {
        var g = function() {
            function a(a, b) {
                for (var d = 0; d < b.length; d++) {
                    var e = b[d];
                    e.enumerable = e.enumerable || !1;
                    e.configurable = !0;
                    "value"in e && (e.writable = !0);
                    Object.defineProperty(a, e.key, e)
                }
            }
            return function(b, d, c) {
                d && a(b.prototype, d);
                c && a(b, c);
                return b
            }
        }();
        a = function() {
            function a(b) {
                var d = this
                    , e = b.settings;
                e = void 0 === e ? {} : e;
                var c = b.init;
                c = void 0 === c ? !1 : c;
                b = b.commonVersion;
                b = void 0 === b ? "20180112" : b;
                if (!(this instanceof a))
                    throw new TypeError("Cannot call a class as a function");
                this.initEle = function(a) {
                    var b = d.eles[a]
                        , e = b.offsets
                        , c = e.topOffsetBreakpoints;
                    e = Math.max(e.topOffset, 0);
                    if (c.length) {
                        var f = !0
                            , m = !1
                            , k = void 0;
                        try {
                            $jscomp.initSymbol();
                            $jscomp.initSymbolIterator();
                            for (var g = c[Symbol.iterator](), l; !(f = (l = g.next()).done); f = !0) {
                                var h = l.value
                                    , n = parseInt(h.offset, 10) || 0;
                                if (h.breakpoint && "100%" !== h.breakpoint) {
                                    var p = parseInt(h.breakpoint, 10) || 0;
                                    d.common.values.innerWidth >= p && (e += n)
                                }
                            }
                        } catch (q) {
                            m = !0,
                                k = q
                        } finally {
                            try {
                                !f && g["return"] && g["return"]()
                            } finally {
                                if (m)
                                    throw k;
                            }
                        }
                    }
                    e !== b.currentOffset && (c = jQuery(b.ele),
                    -1 !== b.currentOffset && c.trigger("sticky_kit:detach").removeData("sticky_kit"),
                        c.stick_in_parent({
                            sticky_class: d.settings.stickyClass,
                            offset_top: e
                        }),
                        d.eles[a].currentOffset = e)
                }
                ;
                this.init = function() {
                    d.initGet();
                    d.initSet()
                }
                ;
                this.initGet = function() {
                    for (var a = window.document.querySelectorAll(d.settings.stickySelector), b = 0, e = a.length; b < e; b++) {
                        var c = a[b]
                            , f = parseInt(c.getAttribute(d.settings.dataTop), 10) || 0
                            , g = void 0;
                        try {
                            g = JSON.parse(c.getAttribute(d.settings.dataTopBreakpoints)) || []
                        } catch (r) {
                            g = []
                        }
                        d.eles.push({
                            ele: c,
                            offsets: {
                                topOffset: f,
                                topOffsetBreakpoints: g
                            },
                            currentOffset: -1
                        })
                    }
                    d.resizeGet();
                    jQuery(window).on("resize.sticky-header", jQuery.proxy(d, "update"))
                }
                ;
                this.initSet = function() {
                    d.resizeSet();
                    d.running = !0
                }
                ;
                this.resize = function() {
                    d.resizeGet();
                    d.resizeSet()
                }
                ;
                this.resizeGet = function() {}
                ;
                this.resizeSet = function() {
                    d.common.values.innerHeight < d.settings.minWindowHeight ? !1 !== d.active && d.disable() : d.active || d.enable();
                    for (var a = 0, b = d.eles.length; a < b; a++)
                        d.initEle(a)
                }
                ;
                this.running = !1;
                this.settings = Object.assign({
                    stickySelector: ".uix_stickyBar",
                    stickyClass: "is-sticky",
                    stickyBrokenClass: "is-sticky-broken",
                    stickyDisabledClass: "is-sticky-disabled",
                    minWindowHeight: 251,
                    dataTop: "data-top-offset",
                    dataTopBreakpoints: "data-top-offset-breakpoints"
                }, e);
                this.commonVersion = b;
                this.common = window.themehouse.common[b];
                this.stickyBroken = this.supportsSticky = this.active = !1;
                this.eles = [];
                c && this.init()
            }
            g(a, [{
                key: "register",
                value: function() {
                    this.common.register({
                        phase: "initGet",
                        addon: "TH_UIX_Sticky",
                        func: this.initGet,
                        order: 10
                    });
                    this.common.register({
                        phase: "initSet",
                        addon: "TH_UIX_Sticky",
                        func: this.initSet,
                        order: 10
                    });
                    this.common.register({
                        phase: "resizeGet",
                        addon: "TH_UIX_Sticky",
                        func: this.resizeGet,
                        order: 10
                    });
                    this.common.register({
                        phase: "resizeSet",
                        addon: "TH_UIX_Sticky",
                        func: this.resizeSet,
                        order: 100
                    })
                }
            }, {
                key: "enable",
                value: function() {
                    var a = this;
                    this.active = !0;
                    for (var b = function(b, c) {
                        var d = a.eles[b].ele;
                        d.classList.remove(a.settings.stickyDisabledClass);
                        a.supportsSticky || (a.stickyBroken && setTimeout(function() {
                            d.classList.add(a.settings.stickyBrokenClass)
                        }, 0),
                            a.initEle(b))
                    }, c = 0, f = this.eles.length; c < f; c++)
                        b(c, f)
                }
            }, {
                key: "disable",
                value: function() {
                    this.active = !1;
                    this.supportsSticky && window.jQuery(window).off("scroll.sticky-header");
                    for (var a = 0, b = this.eles.length; a < b; a++) {
                        var c = this.eles[a].ele;
                        this.supportsSticky && window.jQuery(c).trigger("sticky_kit:detach").removeData("sticky_kit");
                        c.classList.remove(this.settings.stickyClass);
                        c.classList.remove(this.settings.stickyBrokenClass);
                        c.classList.remove(this.settings.stickyDisabledClass)
                    }
                }
            }]);
            return a
        }();
        "undefined" === typeof window.themehouse && (window.themehouse = {});
        window.themehouse.sticky = {
            sticky: a
        };
        b.a = a
    }
]);

jQuery('.p-nav-menuTrigger, .offCanvasMenu-backdrop, .offCanvasMenu-closer').on('click', function() {
    jQuery('.offCanvasMenu').toggleClass('is-active');
});

jQuery('.uix_sidebarNav--trigger').on('click', function () {
    jQuery(this).toggleClass('is-expanded');
    jQuery(this).parent().siblings('.uix_sidebarNav__subNav').toggleClass('subNav--expand');

});

jQuery('.offCanvasMenu-link--splitToggle').on('click', function() {
    jQuery(this).toggleClass('is-active');
    jQuery(this).parent().siblings('.offCanvasMenu-subList').toggleClass('is-active');

});

jQuery('#showSidebar, #siderbar-backdrop').on('click', function() {
   jQuery('.p-body-sidebar').toggleClass('offCanvasMenu offCanvasMenu--blocks is-active');
   jQuery('.uix_sidebarInner').toggleClass('offCanvasMenu-content');
   jQuery('#siderbar-backdrop').toggleClass('offCanvasMenu-backdrop');
});


function changeBar() {
    var scrollHeight = parseInt(document.body.getBoundingClientRect().top);
    if (scrollHeight < -50) {
        jQuery('.p-navSticky').addClass('is-sticky');
    } else {
        jQuery('.p-navSticky').removeClass('is-sticky');
    }
}